스프링부트 with JPA DB 격리수준

오라클 DB 격리수준
MySQL DB 격리수준

트랜잭션 (작업의 가장 작은 단위)

오라클 READ COMMIT 이란

B 사용자가 오직 SELECT만 하는 경우 냉장고, 에어컨이라는 결과를 받더라도 문제가 되지 않는다.
하지만 B 사용자가 트랜잭션이 필요한 연산이 있다면 예를들어 INSERT 문을 사용한다고 했을 때 몇 번의 SELECT 문을 활용해서 처리해야한다면 데이터의 정합성이 깨질 수 있다 (부정합 (phantom read)발생)
이 현상 해결법 (repeatable read 사용)

MySQL DB 격리 수준

InnoDB 스토리지 엔진을 사용한다.
Repeatable read 방식을 사용해서 부정합이 발생하지 않는다.

스프링 사용시 select 할 때도 트랜잭션을 사용한다 (정합성 유지위해)


Spring OSIV(Open Session in View)와 성능 최적화

OSIV ON (spring.jpa.open-in-view : false)

커넥션 시작부터 API 응답이 끝날 때까지 영속성 컨텍스트가 유지된다.
위의 설정에서는 Controller에서도 지연 로딩을 할 수 있다.


이유 : DB커넥션을 오랫동안 사용하게 되면, 즉 실시간 트래픽이 몰리게 되면 커넥션이 부족하고 느려진다.

req -> 톰캣 -> web.xml -> 필터 -> 스프링 컨테이너
                1. db연결 세션
                2. 트랜잭션
                3. 영속성 컨텍스트
	   4. 데이터 변경
	   5. 트랜잭션 종료
	   6. db flush
	   7. db 연결 종료
	   8. 영속성 컨텍스트 종료

세션의 정의

1. 망 환경에서 사용자간 또는 컴퓨터간 대화를 위한 논리적 연결
2. 프로세스들 사이에서 통신을 하기 위해 메시지 교환을 통해 서로를 인식한 이후부터 통신을 마칠 때 까지의 기간

세션이란 일정 시간동안 같은 사용자(정확히는 브라우저)로 들어오는 일련의 요구를 하나의 상태로 보고 그 상태를 일정하게 유지시키는 기술

쿠키란?

웹사이트를 방문했을 때 만들어지는 정보를 담는 파일을 지칭하는 것
이 것 또한 상태정보를 유지하는 기술인데 세션과 차이점은 방문자 정보를 방문자 컴퓨터 메모리에 저장하는 것을 말함

세션은 방문자의 요청에 따른 정보를 방문자 메모리에 저장하는 것이 아닌 웹서버가 세션 아이디를 만들어 서비스가 돌아가고 있는 서버에 저장하는 것을 말한다.


스프링 부트 with JPA 전통적인 로그인 처리

시큐리티


0101010 --> 문자열

통신 : 문자열 형식이 있는 문자 --> json {
	01010100 --> 문자열
}