final과 const (성능 상의 이유로 쓰게됨)

final과 const 는 둘 다 상수를 선언하게 하는 키워드. final은 프로그램 runtime시점에 초기화됨, const 컴파일 시점에 값이 초기화됨

컴파일 시에 초기화되기 때문에 런타임 때 속도가 빠르다. 동일한 클래스를 객체로 여러 번 만들어야 하는 경우에 생성자 인수의 값

이 동일하면 같은 객체이기 때문에 메모리에 만들어진 객체를 재사용한다.


Null Safety

Dart 2.12 버전부터 Null Safety가 적용됨

?를 클래스 뒤에 붙이면 Null Safety가 적용되어서 null을 받을 수 있는 타입이 됩니다.


required

Dart는 메소드 오버로딩 불가능


Widget 이란?

독립적으로 실행되는 작은 프로그램이다.

주로 바탕화면에 날씨나, 뉴스, 생활정보 등을 보여준다.

그래픽이나 데이터 요소를 처리하는 함수를 가지고 있다.


Flutter에서 Widget이란?

앱의 UI를 만들고 구성하는 모든 기본 단위를 의미한다.

플러터에서 눈에 보이지 않는 레이아웃 요소들 까지도 widget이다.

즉, 플러터는 거의 모든것이 위젯이다.


Flutter에서 핵심 Widget

Stateless Widget

Stateful Widget

Inherited Widget

Stateless : 상태가 없는 정적인 위젯 (이전에 상호작용의 어떠한 값도 저장하지 않음)

화면상에 존재만 할 뿐 아무것도 하지 않음

어떠한 실시간 데이터도 저장하지 않음

어떤 변화를 유발시키는 value값을 가지지 않음


Stateful : 계속 움직임이나 변화가 있는 위젯 (Value 값을 지속적으로 추적 보존)

사용자의 인터렉션에 따라서 모양이 바뀜(체크박스, 라디오버튼, input)


Widget tree

화면을 구성하면서 위젯들이 하나의 트리구조로 정리 될 수 있다 (트리구조가 만들어진다)

하나의 위젯에서 다른 하위 위젯들을 포함 시킬 수 있다.

위젯은 부모와 자식의 관계로 정리될 수 있다.

Parent Widget을 다른 말로 container widget이라고 부르기도 한다.


결론

플러터는 거의 모든 것이 위젯이다. 위젯이 전혀 변화가 없으면 stateless widget이다.

위젯의 모양이나 상태가 변경 된다면 stateful widget이다. 위젯들은 트리구조로 구성되어 진다.


Image 위젯을 사용할 때 fit 속성을 많이 이용하게 됩니다.

fit : BoxFit.contain - 원본사진의 가로 세로 비율 변화 없음

fit : BoxFit.fill - 원본사진의 비율을 무시하고 지정한 영역에 사진을 맞춤

fit : BoxFit.cover - 원본사진의 가로 세로 비율을 유지한 채로 지정한 영역에 사진을 맞춤

(장점 : 사진의 비율을 유지할 수 있다)

(단점 : 사진이 지정한 크기를 벗어나면 잘릴 수 있다)


flutter를 시작하기 위해서는 메인함수에 runApp() 함수를 호출해야합니다. runApp 호출시 넘겨주는 위젯이 앱의 루트 위젯이 됨

루트 위젯이란 플러터가 그림을 그릴 때 가장 먼저 그리는 위젯입니다. runApp 실행시 내부적으로 윈도우 생성, 스케줄러 초기화,

위젯 트리 생성, 렌더링 트리 생성이라는 복잡한 일들이 발생하지만 추상화 되어있어 함수 내부의 동작 원리를 지금 굳이 알 필요 X